# core HAL config file for simulation

###########################################################
# Setup
###########################################################
# first load all the RT modules that will be needed
# kinematics
loadrt [KINS]KINEMATICS
# motion controller, get name and thread periods from ini file
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS

#How it work???
# load 6 differentiators (for velocity and accel signals
#loadrt ddt names=ddt_x,ddt_xv,ddt_y,ddt_yv,ddt_z,ddt_zv
# load additional blocks
#loadrt hypot names=vel_xy,vel_xyz

# load ethercat config parser
loadusr -W lcec_conf ethercat-conf.xml
# load ethercat realtime module
loadrt lcec

# load position controller PID instances
loadrt pid names=x-pid,y-pid,z-pid 

#loadusr -W mb2hal config=modbus_config.ini

###########################################################
# Functions
#
# specify the thead and the order where component functions
# will be called. Since we need no high speed pulse generation
# like soft pwm and stepper generator, only the servo thread
# is used (wich allows floating point calculations and runs
# at 1ms cycle time per default). Functions be called in the
# order of definition.
#
# Base thread could be used in simple systems for high speed
# tasks like mentioned above. Base thread only supports
# integer arithmetics.
#
###########################################################

addf lcec.read-all servo-thread

# add motion controller functions to servo thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread

addf x-pid.do-pid-calcs servo-thread
addf y-pid.do-pid-calcs servo-thread
addf z-pid.do-pid-calcs servo-thread

addf lcec.write-all servo-thread

###########################################################
# E-Stop
###########################################################

# estop loopback
net estop-loop iocontrol.0.user-enable-out iocontrol.0.emc-enable-in
#net voltage-on => iocontrol.0.emc-enable-in

###########################################################
# Axis interface for Joints
#
# This File contains the Position-Controler for each 
# joint plus the interface to the LCNC motion controller.
# The motion controller delivers the position command
# and receives the current position from position
# feedback (motor encoder or external messurement system).
# Position command and feedback even feeds into position
# controller, which generates the velocity command for
# the external motor drivers.
#
# The scale for poosition is mm, for velocity mm/s sould
# be used (Please ensure that SCALE in the corresponding
# [JOINT] section in the ini file is set correctly).
#
# If the external motor driver has has velocity controll
# loop, FF1 sould be set accordingly (1.0 in case of
# a velocity scale in mm/s)
#
# Parameters for the position controller are set in
# the ini file. Please refer to
# http://linuxcnc.org/docs/html/man/man9/pid.9.html
# for the descrpition of the parameters
#
###########################################################

###########################################################
# X JOINT
###########################################################

# position controler
setp x-pid.Pgain [JOINT_0]P
setp x-pid.Igain [JOINT_0]I
setp x-pid.Dgain [JOINT_0]D
setp x-pid.FF0 [JOINT_0]FF0
setp x-pid.FF1 [JOINT_0]FF1
setp x-pid.FF2 [JOINT_0]FF2
setp x-pid.deadband [JOINT_0]DEADBAND
setp x-pid.maxoutput [JOINT_0]MAX_OUTPUT
net x-enable => x-pid.enable
net x-pos-cmd => x-pid.command
net x-pos-fb => x-pid.feedback
net x-vel-cmd <= x-pid.output

# joint interface
net x-neg-lim-in => joint.0.home-sw-in
net x-enable <= joint.0.amp-enable-out
net x-amp-fault => joint.0.amp-fault-in
net x-pos-cmd <= joint.0.motor-pos-cmd
net x-pos-fb => joint.0.motor-pos-fb
net x-pos-joint <= joint.0.pos-fb
#net x-homed <= joint.0.homed
net x-homing <= joint.0.homing
net x-neg-lim-in => joint.0.neg-lim-sw-in
net x-pos-lim-in => joint.0.pos-lim-sw-in

###########################################################
# Y joint
###########################################################

# position controler
setp y-pid.Pgain [JOINT_1]P
setp y-pid.Igain [JOINT_1]I
setp y-pid.Dgain [JOINT_1]D
setp y-pid.FF0 [JOINT_1]FF0
setp y-pid.FF1 [JOINT_1]FF1
setp y-pid.FF2 [JOINT_1]FF2
setp y-pid.deadband [JOINT_1]DEADBAND
setp y-pid.maxoutput [JOINT_1]MAX_OUTPUT
net y-enable => y-pid.enable
net y-pos-cmd => y-pid.command
net y-pos-fb => y-pid.feedback
net y-vel-cmd <= y-pid.output

# joint interface
net y-neg-lim-in => joint.1.home-sw-in
net y-enable <= joint.1.amp-enable-out
net y-amp-fault => joint.1.amp-fault-in
net y-pos-cmd <= joint.1.motor-pos-cmd
net y-pos-fb => joint.1.motor-pos-fb
net y-pos-joint <= joint.1.pos-fb
#net y-homed <= joint.1.homed
net y-homing <= joint.1.homing
net y-neg-lim-in => joint.1.neg-lim-sw-in
net y-pos-lim-in => joint.1.pos-lim-sw-in

###########################################################
# Z joint
###########################################################

# position controler
setp z-pid.Pgain [JOINT_2]P
setp z-pid.Igain [JOINT_2]I
setp z-pid.Dgain [JOINT_2]D
setp z-pid.FF0 [JOINT_2]FF0
setp z-pid.FF1 [JOINT_2]FF1
setp z-pid.FF2 [JOINT_2]FF2
setp z-pid.deadband [JOINT_2]DEADBAND
setp z-pid.maxoutput [JOINT_2]MAX_OUTPUT
net z-enable => z-pid.enable
net z-pos-cmd => z-pid.command
net z-pos-fb => z-pid.feedback
net z-vel-cmd <= z-pid.output

# joint interface
net z-neg-lim-in => joint.2.home-sw-in
net z-enable <= joint.2.amp-enable-out
net z-amp-fault => joint.2.amp-fault-in
net z-pos-cmd <= joint.2.motor-pos-cmd
net z-pos-fb => joint.2.motor-pos-fb
net z-pos-joint <= joint.2.pos-fb
#net z-homed <= joint.2.homed
net z-homing <= joint.2.homing
net z-neg-lim-in => joint.2.neg-lim-sw-in
net z-pos-lim-in => joint.2.pos-lim-sw-in

###########################################################
#
# IO HAL file
# This file connects internal LCNC HAL signals with
# external Haldware on the ethercat bus.
#
###########################################################

###########################################################
# Signals for monitorting of the connection state
# and slave state
###########################################################
net ec-slaves-responding <= lcec.slaves-responding
net ec-link-up <= lcec.link-up
net ec-all-op <= lcec.all-op

###########################################################
# digital inputs
###########################################################

#net voltage-on <= lcec.0.D2.din-0-not
# pos==linit neg==home 
net x-pos-lim-in <= lcec.0.D2.din-4
net x-neg-lim-in <= lcec.0.D2.din-5
net y-pos-lim-in <= lcec.0.D2.din-0
net y-neg-lim-in <= lcec.0.D2.din-1
net z-pos-lim-in <= lcec.0.D2.din-3
net z-neg-lim-in <= lcec.0.D2.din-2

###########################################################
# digital outputs
###########################################################

#net coolant-on => lcec.0.D6.dout-0
#net spindle-cw <= lcec.0.D6.dout-1
#net spindle-ccw <= lcec.0.D6.dout-2
#net z-brake => lcec.0.D6.dout-6

##########################################################
# AO
##########################################################
#example
#setp lcec.0.D4.aout-0-absmode 1
#setp lcec.0.D4.aout-0-min-dc -1
#setp lcec.0.D4.aout-0-max-dc 1
#setp lcec.0.D4.aout-0-scale 2000
#setp lcec.0.D4.aout-0-offset 0
#setp lcec.0.D4.aout-0-enable 1
#net voltage-on => lcec.0.D4.aout-0-enable

###########################################################
# servo controlers
###########################################################

# X axis
# HINT: Please refer to lcec_deasda.h for a complete
# description off all delta driver pins/parameters.
#
# voltage is statically enabled as soon as LCNC is running
setp lcec.0.3A1.srv-enable-volt 1
# set motor position scale (default 1 motor revolution)
setp lcec.0.3A1.pos-scale [JOINT_0]SCALE
setp lcec.0.3A1.extenc-scale [JOINT_0]ENC_SCALE
# switch on if joint is enables
# this signal is used for the fault autoreset feature, too
net x-enable => lcec.0.3A1.srv-switch-on
# enable operation if joint is enabled
# The delta driver internally delay this signal
# till switched-on feedback is set to 1
net x-enable => lcec.0.3A1.srv-enable
# check driver fault status
net x-amp-fault <= lcec.0.3A1.srv-fault
# output velocity command from position control
# the scale of this value respects the setting
# of srv-pos-scale. if scale is set to 1.0 this
# means 1 motor revolution per second.
net x-vel-cmd => lcec.0.3A1.srv-vel-cmd
# motor encoder position is used as joint
# position feedback
net x-pos-fb <= lcec.0.3A1.enc-pos-enc

# Y axis
# same logic as X axis
setp lcec.0.3A2.srv-enable-volt 1
setp lcec.0.3A2.pos-scale [JOINT_1]SCALE
setp lcec.0.3A2.extenc-scale [JOINT_1]ENC_SCALE
net y-enable => lcec.0.3A2.srv-switch-on
net y-enable => lcec.0.3A2.srv-enable
net y-amp-fault <= lcec.0.3A2.srv-fault
net y-vel-cmd => lcec.0.3A2.srv-vel-cmd
net y-pos-fb <= lcec.0.3A2.enc-pos-enc

# Z axis
# same logic as X axis
setp lcec.0.4A3.srv-enable-volt 1
setp lcec.0.4A3.pos-scale [JOINT_2]SCALE
setp lcec.0.4A3.extenc-scale [JOINT_2]ENC_SCALE
net z-enable => lcec.0.4A3.srv-switch-on
net z-enable => lcec.0.4A3.srv-enable
net z-amp-fault <= lcec.0.4A3.srv-fault
net z-vel-cmd => lcec.0.4A3.srv-vel-cmd
net z-pos-fb <= lcec.0.4A3.enc-pos-enc
net z-brake <= lcec.0.4A3.srv-oper-enabled

###########################################################
# modbus
###########################################################
#net power => mb2hal.write_holding.01

###########################################################
# vismach
###########################################################
#loadusr -W ./dargon-gui.py
#net pos-x joint.0.pos-fb => dargon-gui.joint-x
#net pos-y joint.1.pos-fb => dargon-gui.joint-y
#net pos-z joint.2.pos-fb => dargon-gui.joint-z


loadusr linuxcncrsh 
